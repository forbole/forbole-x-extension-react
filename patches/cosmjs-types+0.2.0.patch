diff --git a/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js b/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js
index 0673e21..41ebbd1 100644
--- a/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js
+++ b/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js
@@ -8,6 +8,7 @@ exports.Params = exports.ModuleAccount = exports.BaseAccount = exports.protobufP
 const long_1 = __importDefault(require("long"));
 const minimal_1 = __importDefault(require("protobufjs/minimal"));
 const any_1 = require("../../../google/protobuf/any");
+const timestamp_1 = require("../../../google/protobuf/timestamp");
 exports.protobufPackage = "cosmos.auth.v1beta1";
 const baseBaseAccount = { address: "", accountNumber: long_1.default.UZERO, sequence: long_1.default.UZERO };
 exports.BaseAccount = {
@@ -355,4 +356,74 @@ if (minimal_1.default.util.Long !== long_1.default) {
     minimal_1.default.util.Long = long_1.default;
     minimal_1.default.configure();
 }
+
+// Desmos Profile
+  
+function fromTimestamp(t) {
+    let millis = t.seconds * 1_000
+    millis += t.nanos / 1_000_000
+    return new Date(millis)
+}
+
+const Pictures = {
+    decode(input, length) {
+        const basePictures = { profile: '', cover: '' }
+        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
+        let end = length === undefined ? reader.len : reader.pos + length
+        const message = { ...basePictures }
+        while (reader.pos < end) {
+            const tag = reader.uint32()
+            switch (tag >>> 3) {
+            case 1:
+                message.profile = reader.string()
+                break
+            case 2:
+                message.cover = reader.string()
+                break
+            default:
+                reader.skipType(tag & 7)
+                break
+            }
+        }
+        return message
+    },
+}
+
+exports.ProfileAccount = {
+    decode(input, length) {
+        const baseProfile = { dtag: '', nickname: '', bio: '' }
+        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
+        let end = length === undefined ? reader.len : reader.pos + length
+        const message = { ...baseProfile }
+        while (reader.pos < end) {
+          const tag = reader.uint32()
+          switch (tag >>> 3) {
+            case 1:
+              message.account = any_1.Any.decode(reader, reader.uint32())
+              break
+            case 2:
+              message.dtag = reader.string()
+              break
+            case 3:
+              message.nickname = reader.string()
+              break
+            case 4:
+              message.bio = reader.string()
+              break
+            case 5:
+              message.pictures = Pictures.decode(reader, reader.uint32())
+              break
+            case 6:
+              message.creationDate = fromTimestamp(
+                timestamp_1.Timestamp.decode(reader, reader.uint32())
+              )
+              break
+            default:
+              reader.skipType(tag & 7)
+              break
+          }
+        }
+        return message
+      },
+};
 //# sourceMappingURL=auth.js.map