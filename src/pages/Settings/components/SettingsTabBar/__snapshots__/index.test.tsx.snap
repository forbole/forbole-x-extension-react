// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components: SettingsTabBar renders 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="MuiTabs-root css-b7f350-MuiTabs-root"
      >
        <div
          class="MuiTabs-scroller MuiTabs-fixed css-jpln7h-MuiTabs-scroller"
          style="overflow: hidden; margin-bottom: 0px;"
        >
          <div
            class="MuiTabs-flexContainer css-heg063-MuiTabs-flexContainer"
            role="tablist"
          >
            <button
              aria-selected="true"
              class="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary Mui-selected css-9wecxo-MuiButtonBase-root-MuiTab-root"
              role="tab"
              tabindex="0"
              type="button"
            >
              1
              <span
                class="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
              />
            </button>
          </div>
          <span
            class="MuiTabs-indicator css-4fp11o-MuiTabs-indicator"
            style="left: 0px; width: 0px;"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="MuiTabs-root css-b7f350-MuiTabs-root"
    >
      <div
        class="MuiTabs-scroller MuiTabs-fixed css-jpln7h-MuiTabs-scroller"
        style="overflow: hidden; margin-bottom: 0px;"
      >
        <div
          class="MuiTabs-flexContainer css-heg063-MuiTabs-flexContainer"
          role="tablist"
        >
          <button
            aria-selected="true"
            class="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary Mui-selected css-9wecxo-MuiButtonBase-root-MuiTab-root"
            role="tab"
            tabindex="0"
            type="button"
          >
            1
            <span
              class="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
            />
          </button>
        </div>
        <span
          class="MuiTabs-indicator css-4fp11o-MuiTabs-indicator"
          style="left: 0px; width: 0px;"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
